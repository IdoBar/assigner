% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assignment_mixture.R
\name{assignment_mixture}
\alias{assignment_mixture}
\title{Mixture/Baseline assignment analysis of massive parallel sequencing data (GBS/RADseq, 
SNP chip, etc) using \code{gsi_sim} and \code{\link[adegenet]{adegenet}}}
\usage{
assignment_mixture(data, strata = NULL, mixture = NULL, assignment.analysis,
  sampling.method, iteration.method = 10, subsample = NULL,
  iteration.subsample = 1, marker.number = "all", blacklist.id = NULL,
  blacklist.genotype = NULL, whitelist.markers = NULL,
  monomorphic.out = TRUE, snp.ld = NULL, common.markers = TRUE,
  maf.thresholds = NULL, maf.pop.num.threshold = 1, maf.approach = "SNP",
  maf.operator = "OR", max.marker = NULL, pop.levels = NULL,
  pop.labels = NULL, pop.select = NULL, imputation.method = NULL,
  impute.mixture = FALSE, impute = "genotype",
  imputations.group = "populations", num.tree = 100, iteration.rf = 10,
  split.number = 100, verbose = FALSE, folder = NULL,
  filename = "assignment_data.txt", keep.gsi.files = FALSE,
  parallel.core = detectCores() - 1)
}
\arguments{
\item{data}{6 options: vcf (to make vcf population ready, see details below),
plink, stacks haplotype file, genind, genepop, 
and a data frame in wide format. \emph{See details}.}

\item{strata}{(optional for data frame and PLINK files, 
required for VCF and haplotypes files) A tab delimited file with 2 columns with header:
\code{INDIVIDUALS} and \code{STRATA}. With a 
data frame of genotypes the strata is the INDIVIDUALS and POP_ID columns, with
PLINK files, the \code{tfam} first 2 columns are used. 
If a \code{strata} file is specified, the strata file will have
precedence. The \code{STRATA} column can be any hierarchical grouping. 
To create a strata file see \code{\link[stackr]{individuals2strata}}.
If you have already run 
\href{http://catchenlab.life.illinois.edu/stacks/}{stacks} on your data, 
the strata file is similar to a stacks `population map file`, make sure you 
have the required column names  (\code{INDIVIDUALS} and \code{STRATA}).
Default: \code{strata = NULL}.
\strong{mixture samples}: use \code{"mixture"} or \code{"unknown"} inside the
\code{STRATA} column to identify samples not in the baseline,
but see details on the other ways to identify your unknown or mixture samples.}

\item{mixture}{(optional) A file in the working directory (e.g. "mixture.txt")
with mixture individual ID. The column header is \code{INDIVIDUALS}.
Default: \code{mixture = NULL}, but see details on the different ways to 
identify your unknown or mixture samples.}

\item{assignment.analysis}{Assignment analysis conducted with 
\code{assignment.analysis = "gsi_sim"} or 
\code{assignment.analysis = "adegenet"}.}

\item{sampling.method}{(character) Should the markers be randomly selected
\code{"random"} for a classic Leave-One-Out (LOO) assignment or
chosen based on ranked Fst \code{"ranked"} using the baseline samples 
for the training and the mixture samples as holdout. 
Classic Leave-one-out is then used to assign individual mixture samples.}

\item{iteration.method}{With random marker selection the iterations argument =
the number of iterations to repeat marker resampling. 
Default: \code{iteration.method = 10}.
With \code{marker.number = c(500, 1000)} and default iterations setting,
500 markers will be randomly chosen 10 times and 1000 markers will be randomly
chosen 10 times.}

\item{subsample}{(Integer or Proportion) Default is no sumsampling, 
\code{subsample = NULL}.
With a proportion argument \code{subsample = 0.15}, 15 percent of 
\strong{baseline} individuals in each populations are chosen randomly to 
represent the dataset.
With \code{subsample = 36}, 36 individuals in each populations are chosen
randomly to represent the dataset.}

\item{iteration.subsample}{(Integer) The number of iterations to repeat 
subsampling, default: \code{iteration.subsample = 1}.
With \code{subsample = 20} and \code{iteration.subsample = 10},
20 individuals/populations will be randomly chosen 10 times.}

\item{marker.number}{(Integer or string of number or "all") Calculations with
fixed or subsample of your markers. Default= \code{"all"}.
e.g. To test 500, 1000, 2000 and all the markers:
\code{marker.number = c(500, 1000, 2000, "all")}.
To use only 500 makers \code{marker.number = 500}.}

\item{blacklist.id}{(optional) A blacklist with individual ID and
a column header 'INDIVIDUALS'. The blacklist is in the working directory
(e.g. "blacklist.txt").
Default: \code{blacklist.id = NULL}.}

\item{blacklist.genotype}{(optional) Useful to erase genotype with below 
average quality, e.g. genotype with more than 2 alleles in diploid likely 
sequencing errors or genotypes with poor genotype likelihood or coverage. 
The blacklist as a minimum of 2 column headers (markers and individuals). 
Markers can be 1 column (CHROM or LOCUS or POS), 
a combination of 2 (e.g. CHROM and POS or CHROM and LOCUS or LOCUS and POS) or 
all 3 (CHROM, LOCUS, POS) The markers columns must be designated: CHROM (character
or integer) and/or LOCUS (integer) and/or POS (integer). The id column designated
INDIVIDUALS (character) columns header. The blacklist must be in the working 
directory (e.g. "blacklist.genotype.txt"). For de novo VCF, CHROM column 
with 'un' need to be changed to 1. 
Default: \code{blacklist.genotype = NULL} for no blacklist of 
genotypes to erase.}

\item{whitelist.markers}{(optional) A whitelist containing CHROM (character
or integer) and/or LOCUS (integer) and/or
POS (integer) columns header. To filter by chromosome and/or locus and/or by snp.
The whitelist is in the working directory (e.g. "whitelist.txt").
de novo CHROM column with 'un' need to be changed to 1. 
In the VCF, the column ID is the LOCUS identification.
Default \code{whitelist.markers = NULL} for no whitelist of markers.}

\item{monomorphic.out}{(optional) Should the monomorphic 
markers present in the dataset be filtered out ? 
Default: \code{monomorphic.out = TRUE}.}

\item{snp.ld}{(optional) \strong{For VCF file only}. 
SNP short distance linkage disequilibrium pruning. With anonymous markers from
RADseq/GBS de novo discovery, you can minimize linkage disequilibrium (LD) by
choosing among these 3 options: \code{"random"} selection, \code{"first"} or
\code{"last"} SNP on the same short read/haplotype. For long distance linkage
disequilibrium pruning, see details below.
Default: \code{snp.ld = NULL}.}

\item{common.markers}{(optional) Logical. Default: \code{common.markers = TRUE}, 
will only keep markers in common (genotyped) between all the populations.}

\item{maf.thresholds}{(string, double, optional) String with 
local/populations and global/overall maf thresholds, respectively.
e.g. \code{maf.thresholds = c(0.05, 0.1)} for a local maf threshold 
of 0.05 and a global threshold of 0.1. Available for VCF, PLINK and data frame 
files.
Default: \code{maf.thresholds = NULL}.}

\item{maf.pop.num.threshold}{(integer, optional) When maf thresholds are used,
this argument is for the number of pop required to pass the maf thresholds
to keep the locus. Default: \code{maf.pop.num.threshold = 1}}

\item{maf.approach}{(character, optional). 
\code{maf.approach = "haplotype"} : looks at the minimum MAF found on the 
read/haplotype. Using this option will discard all the markers/snp on 
that read based on the thresholds chosen. This method is only available 
for VCF and haplotype files, or tidy data frame from those file types.
\code{maf.approach = "SNP"} : treats all the SNP on the same 
haplotype/read as independent. Doesn't work with haplotype file, 
but does work for all other file type.
Default is \code{maf.approach = "SNP"}.}

\item{maf.operator}{(character, optional) \code{maf.operator = "AND"} or 
default \code{maf.operator = "OR"}.
When filtering over LOCUS or SNP, do you want the local \code{"AND"}
global MAF to pass the thresholds, or ... you want the local \code{"OR"}
global MAF to pass the thresholds, to keep the marker?}

\item{max.marker}{An optional integer useful to subsample marker number in 
large PLINK file. e.g. if the data set 
contains 200 000 markers and \code{max.marker = 10000} 10000 markers are
subsampled randomly from the 200000 markers. Use \code{whitelist.markers} to
keep specific markers.
Default: \code{max.marker = NULL}.}

\item{pop.levels}{(optional, string) This refers to the levels in a factor. In this 
case, the id of the pop.
Use this argument to have the pop ordered your way instead of the default 
alphabetical or numerical order. e.g. \code{pop.levels = c("QUE", "ONT", "ALB")} 
instead of the default \code{pop.levels = c("ALB", "ONT", "QUE")}. 
Default: \code{pop.levels = NULL}.}

\item{pop.labels}{(optional, string) Use this argument to rename/relabel
your pop or combine your pop. e.g. To combine \code{"QUE"} and \code{"ONT"} 
into a new pop called \code{"NEW"}:
(1) First, define the levels for your pop with \code{pop.levels} argument: 
\code{pop.levels = c("QUE", "ONT", "ALB")}. 
(2) then, use \code{pop.labels} argument: 
\code{pop.levels = c("NEW", "NEW", "ALB")}.#' 
To rename \code{"QUE"} to \code{"TAS"}:
\code{pop.labels = c("TAS", "ONT", "ALB")}.
Default: \code{pop.labels = NULL}. If you find this too complicated, there is also the
\code{strata} argument that can do the same thing, see below.}

\item{pop.select}{(string, optional) Selected list of populations for 
the analysis. e.g. \code{pop.select = c("QUE", "ONT")} to select \code{QUE}
and \code{ONT} population samples (out of 20 pops).
Default: \code{pop.select = NULL}}

\item{imputation.method}{(character, optional) 
Methods available for map-independent imputations of missing genotype: 
(1) \code{"max"} to use the most frequent category for imputations.
(2) \code{"rf"} using Random Forest algorithm. 
Default: no imputation \code{imputation.method = NULL}.}

\item{impute.mixture}{(Logical) Imputations of mixture samples.
Default: \code{impute.mixture = FALSE}. For no imputation. 
For \code{impute.mixture = TRUE} the imputations.group (see below)
for the mixture samples is automatically set to 
\code{imputations.group = "global"}. Warning: bias could be introduced by imputing
missing genotype in the mixture samples.}

\item{impute}{(character, optional) Imputation on missing genotype 
\code{impute = "genotype"} or alleles \code{impute = "allele"}.
Default: \code{"genotype"}.}

\item{imputations.group}{(character, optional) \code{"global"} or \code{"populations"}.
Should the imputations be computed globally or by populations. If you choose
global, turn the verbose to \code{TRUE}, to see progress.
Default = \code{"populations"}.}

\item{num.tree}{(integer, optional) The number of trees to grow in Random Forest. 
Default: \code{num.tree = 100}.}

\item{iteration.rf}{(integer, optional) The number of iterations of missing data algorithm
in Random Forest. 
Default: \code{iteration.rf = 10}.}

\item{split.number}{(integer, optional) Non-negative integer value used to specify
random splitting in Random Forest. 
Default: \code{split.number = 100}.}

\item{verbose}{(logical, optional) Should trace output be enabled on each iteration
in Random Forest ? 
Default: \code{verbose = FALSE}.}

\item{folder}{(optional) The name of the folder created in the working 
directory to save the files/results. Default: \code{folder = NULL}.}

\item{filename}{(optional) The name of the file written to the directory.
Use the extension ".txt" at the end. 
Default \code{filename = assignment_data.txt}.
The number of markers used will be appended to the name of the file.}

\item{keep.gsi.files}{(Logical) With default: \code{keep.gsi.files = FALSE}, 
the input and output gsi_sim files
will be deleted from the directory when finished processing.
With \code{keep.gsi.files = TRUE}, remember to allocate a large chunk of the disk space for the analysis.}

\item{parallel.core}{(optional) The number of core for OpenMP shared-memory parallel
programming of Random Forest imputations. For more info on how to install the
OpenMP version see \code{\link[randomForestSRC]{randomForestSRC-package}}.
If not selected \code{detectCores()-1} is used as default.}
}
\value{
Depending on arguments selected, several files are written to the your
working directory or \code{folder}
The output in your global environment is a list. To view the assignment results
\code{$assignment} or \code{$assignment.mixture.summary.results}
}
\description{
The arguments in the \code{assignment_mixture} function were tailored for the
reality of GBS/RADseq data for assignment analysis of mixture or unknown samples, 
while maintaining a reproducible workflow.

\itemize{
  \item \strong{Input file:} various file format are supported (see \code{data} argument below)
  \item \strong{Filters:} genotypes, markers, individuals and populations can be 
  filtered and/or selected in several ways using blacklist,
  whitelist and other arguments
  \item \strong{Cross-Validations:} Markers can be randomly selected for a classic LOO (Leave-One-Out)
  assignment or chosen based on ranked Fst for a thl
  (Training, Holdout, Leave-one-out) assignment analysis
  \item \strong{Imputations:} Map-independent imputation of missing genotype/alleles
  using Random Forest or the most frequent category.
  \item \strong{Assignment analysis:} conducted in 
  \href{https://github.com/eriqande/gsi_sim}{gsi_sim}, a tool 
  for doing and simulating genetic stock identification and 
  developed by Eric C. Anderson, or 
\href{https://github.com/thibautjombart/adegenet}{adegenet}, 
an R package developed by Thibaul Jombart
  \item \strong{Parallel:} The assignment can be conduncted on multiple CPUs
  \item \strong{Results:} Assignment results in raw or processed tables and figures
}
}
\details{
\strong{2 options to identify your unknown or mixture samples, using:}
\itemize{
  \item \strong{strata} argument with "mixture" or "unknown" 
  instead of the grouping id (e.g. populations) for the other samples.
   \item \strong{mixture} argument using a file in the working directory 
   (e.g. "mixture.txt") with mixture individual ID. 
   The column header is \code{INDIVIDUALS}.
  }

\strong{Input files:}
\enumerate{
\item VCF file (e.g. \code{data = "batch_1.vcf"}). 
To make the VCF population ready, you need the \code{strata} argument.

\item haplotype file created in STACKS (e.g. \code{data = "batch_1.haplotypes.tsv"}).
To make the haplotype file population ready, you need the \code{strata} argument.

\item Data frame
To discriminate the long from the wide format, 
the function \pkg{stackr} \code{\link[stackr]{read_long_tidy_wide}} searches 
for "MARKERS" in column names (TRUE = long format).
The data frame is tab delimitted.
\strong{Wide format:}
The wide format cannot store metadata info.
The wide format starts with these 2 id columns: 
\code{INDIVIDUALS}, \code{POP_ID} (that refers to any grouping of individuals), 
the remaining columns are the markers in separate columns storing genotypes.

\strong{Long/Tidy format:}
The long format is considered to be a tidy data frame and can store metadata info. 
(e.g. from a VCF see \pkg{stackr} \code{\link[stackr]{tidy_genomic_data}}). A minimum of 4 columns
are required in the long format: \code{INDIVIDUALS}, \code{POP_ID}, 
\code{MARKERS} and \code{GENOTYPE or GT}. The rest are considered metata info.

\strong{2 genotypes formats are available:}
6 characters no separator: e.g. \code{001002 of 111333} (for heterozygote individual).
6 characters WITH separator: e.g. \code{001/002 of 111/333} (for heterozygote individual).
The separator can be any of these: \code{"/", ":", "_", "-", "."}.

\emph{How to get a tidy data frame ?}
\pkg{stackr} \code{\link[stackr]{tidy_genomic_data}} can transform 6 genomic data formats 
in a tidy data frame.

\item PLINK file in 
\code{tped/tfam} format (e.g. \code{data =  "data.assignment.tped"}). 
The first 2 columns of the \code{tfam} file will be used for the 
\code{strata} argument below, unless a new one is provided. 
Columns 1, 3 and 4 of the \code{tped} are discarded. The remaining columns 
correspond to the genotype in the format \code{01/04} 
where \code{A = 01, C = 02, G = 03 and T = 04}. For \code{A/T} format, use 
PLINK or bash to convert.
Use \href{http://vcftools.sourceforge.net/}{VCFTOOLS} with \code{--plink-tped} 
to convert very large VCF file. For \code{.ped} file conversion to 
\code{.tped} use \href{http://pngu.mgh.harvard.edu/~purcell/plink/}{PLINK} 
with \code{--recode transpose},

\item \code{\link[adegenet]{genind}} object from \code{\link[adegenet]{adegenet}}.

\item genepop data file (e.g. \code{data = kiwi_data.gen}). Here, the function can only use
alleles encoded with 3 digits.
}

\strong{Imputations:}

The imputations using Random Forest requires more time to compute
and can take several
minutes and hours depending on the size of the dataset and polymorphism of
the species used. e.g. with a low polymorphic taxa, and a data set
containing 30\% missing data, 5 000 haplotypes loci and 500 individuals
will require 15 min. This is using multiple CPUs. To have your computer ready
for parallel computing during imputations follow the steps in this 
vignette (~10 min) : `vignette("vignette_imputations_parallel")`

\strong{THL, Ranking and Fst:}

With \code{sampling.method = "ranked"}, the markers are first 
arranged by \emph{decreasing} values of Fst.
The Fst is computed with \code{\link{fst_WC84}} function, that uses a fast 
implementation of Weir and Cockerham 1984 Fst/Theta equations.
}
\note{
\code{assignment_mixture} assumes that the command line version of gsi_sim 
is properly installed into \code{file.path(system.file(package = "assigner"), "bin", "gsi_sim")}.
Things are set up so that it will try running gsi_sim, and if it does not find it, the 
program will throw an error and ask the user to run \code{\link{install_gsi_sim}}
which will do its best to put a usable copy of gsi_sim where it is needed. To do 
so, you must be connected to the internet. If that doesn't work, you will
need to compile the program yourself, or get it yourself, and the manually copy
it to \code{file.path(system.file(package = "assigner"), "bin", "gsi_sim")}.
To compile gsi_sim, follow the 
instruction here: \url{https://github.com/eriqande/gsi_sim}.
}
\examples{
\dontrun{
# with adegenet DAPC for the assignment and sampling.method = "random":
assignment.treefrog <- assignment_mixture(
data = "batch_1.vcf",
strata = "strata.tsv",
mixture = "mixture.treefrog.tsv",
assignment.analysis = "adegenet",
whitelist.markers = "whitelist.vcf.txt",
snp.ld = NULL,
common.markers = TRUE,
marker.number = c(500, 5000, "all"),
sampling.method = "random",
blacklist.id = "blacklist.id.tsv",
subsample = 25,
iteration.subsample = 5
filename = "treefrog.txt",
keep.gsi.files = FALSE,
pop.levels = c("PAN", "COS", "mixture")
imputation.method = NULL,
parallel.core = 12
)
# with gsi_sim for the mixture assignment and sampling.method = "ranked"
# Here I also want to impute the genotypes of the data (baseline and mixture) 
# using random forest:
assignment.tuna <- assignment_mixture(
data = "data.frame.genotypes.tuna.tsv",
mixture = "cohort.tuna.tsv",
assignment.analysis = "gsi_sim",
common.markers = TRUE,
marker.number = c(100, 200, 300),
sampling.method = "ranked",
subsample = 25,
iteration.subsample = 5
filename = "tuna.txt",
keep.gsi.files = FALSE,
pop.levels = c("BAJ", "IND", "mixture"),
imputation.method = "rf", 
impute.mixture = TRUE, 
impute = "genotype", 
imputations.group = "populations", 
num.tree = 100, 
iteration.rf = 10, 
split.number = 100, 
verbose = FALSE,
parallel.core = 12
)

Since the 'folder' argument is missing, it will be created automatically
inside your working directory.

use $ to access the data frames in the list created.
}
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com}
}
\references{
Anderson, Eric C., Robin S. Waples, and Steven T. Kalinowski. (2008)
An improved method for predicting the accuracy of genetic stock identification.
Canadian Journal of Fisheries and Aquatic Sciences 65, 7:1475-1486.

Anderson, E. C. (2010) Assessing the power of informative subsets of
loci for population assignment: standard methods are upwardly biased.
Molecular ecology resources 10, 4:701-710.

Catchen JM, Amores A, Hohenlohe PA et al. (2011)
Stacks: Building and Genotyping Loci De Novo From Short-Read Sequences.
G3, 1, 171-182.

Catchen JM, Hohenlohe PA, Bassham S, Amores A, Cresko WA (2013)
Stacks: an analysis tool set for population genomics.
Molecular Ecology, 22, 3124-3140.

Weir BS, Cockerham CC (1984) Estimating F-Statistics for the
Analysis of Population Structure. Evolution, 38, 1358–1370.

Ishwaran H. and Kogalur U.B. (2015). Random Forests for Survival,
Regression and Classification (RF-SRC), R package version 1.6.1.

Ishwaran H. and Kogalur U.B. (2007). Random survival forests
for R. R News 7(2), 25-31.

Ishwaran H., Kogalur U.B., Blackstone E.H. and Lauer M.S. (2008).
Random survival forests. Ann. Appl. Statist. 2(3), 841--860.

Danecek P, Auton A, Abecasis G et al. (2011)
The variant call format and VCFtools.
Bioinformatics, 27, 2156-2158.

Purcell S, Neale B, Todd-Brown K, Thomas L, Ferreira MAR, 
Bender D, et al. 
PLINK: a tool set for whole-genome association and population-based linkage 
analyses. 
American Journal of Human Genetics. 2007; 81: 559–575. doi:10.1086/519795
}
\seealso{
\code{gsi_sim} development page is available here: \url{https://github.com/eriqande/gsi_sim}
}

